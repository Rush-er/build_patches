From 155e3a8157eb2768e8cc66598986a6d9dc3bcaf7 Mon Sep 17 00:00:00 2001
From: Sagar Verma <sagarv@codeaurora.org>
Date: Fri, 3 Jul 2020 22:08:04 +0530
Subject: [PATCH 35/38] BT-Audio: Keep track of Active TWS+ EB device in
 BTHelper

Keep track of active TWS+ EB device in MM Audio module
based on device connect/disconnect events as part of
Active device update. This device tracking will help us
to make decision for Audio updates regarding reconfig
should be done OR not based on EBs transition use-case.

CRs-Fixed: 2717923
Change-Id: I2df8447acb1d8e1b843a49906f2f3e3993dee5d6
---
 .../com/android/server/audio/AudioDeviceInventory.java |  2 ++
 .../core/java/com/android/server/audio/BtHelper.java   | 10 ++++++++--
 2 files changed, 10 insertions(+), 2 deletions(-)

diff --git a/services/core/java/com/android/server/audio/AudioDeviceInventory.java b/services/core/java/com/android/server/audio/AudioDeviceInventory.java
index 43ef5183..adbcb68d 100644
--- a/services/core/java/com/android/server/audio/AudioDeviceInventory.java
+++ b/services/core/java/com/android/server/audio/AudioDeviceInventory.java
@@ -846,6 +846,7 @@ public class AudioDeviceInventory {
           if (state == BluetoothProfile.STATE_DISCONNECTED) {
               mDeviceBroker.postBluetoothA2dpDeviceConnectionStateSuppressNoisyIntent(
                              device, state, profile, suppressNoisyIntent, a2dpVolume);
+              BtHelper.SetA2dpActiveDevice(null);
               return;
           }
           // state == BluetoothProfile.STATE_CONNECTED
@@ -870,6 +871,7 @@ public class AudioDeviceInventory {
                                  AudioSystem.DEVICE_OUT_BLUETOOTH_A2DP, BtHelper.getName(device),
                                  address, a2dpCodec));
                       if (BtHelper.isTwsPlusSwitch(device, existingDevice.getValue().mDeviceAddress)) {
+                          BtHelper.SetA2dpActiveDevice(device);
                           if (AudioService.DEBUG_DEVICES) {
                               Log.d(TAG,"TWS+ device switch");
                           }
diff --git a/services/core/java/com/android/server/audio/BtHelper.java b/services/core/java/com/android/server/audio/BtHelper.java
index 6cdd12c7..9970477a 100644
--- a/services/core/java/com/android/server/audio/BtHelper.java
+++ b/services/core/java/com/android/server/audio/BtHelper.java
@@ -72,6 +72,7 @@ public class BtHelper {
 
     // Reference to BluetoothA2dp to query for AbsoluteVolume.
     static private @Nullable BluetoothA2dp mA2dp;
+    static private @Nullable BluetoothDevice mBluetoothA2dpActiveDevice;
 
     // If absolute volume is supported in AVRCP device
     private boolean mAvrcpAbsVolSupported = false;
@@ -219,6 +220,11 @@ public class BtHelper {
         return deviceName;
     }
 
+    /*packages*/ static void SetA2dpActiveDevice(BluetoothDevice device) {
+        Log.w(TAG,"SetA2dpActiveDevice for TWS+ pair as " + device);
+        mBluetoothA2dpActiveDevice = device;
+    }
+
     /*packages*/ @NonNull static boolean isTwsPlusSwitch(@NonNull BluetoothDevice device,
                                                                  String address) {
         BluetoothAdapter adapter = BluetoothAdapter.getDefaultAdapter();
@@ -230,8 +236,8 @@ public class BtHelper {
         if (device.isTwsPlusDevice() &&
             connDevice.isTwsPlusDevice() &&
             device.getTwsPlusPeerAddress().equals(address)) {
-            if(mA2dp.getConnectionState(connDevice) != BluetoothProfile.STATE_CONNECTED) {
-                Log.w(TAG,"Active earbud is already disconnected");
+            if (mBluetoothA2dpActiveDevice == null) {
+                Log.w(TAG,"Not a TwsPlusSwitch as previous active device was null");
                 return false;
             }
             Log.i(TAG,"isTwsPlusSwitch true");
-- 
2.28.0


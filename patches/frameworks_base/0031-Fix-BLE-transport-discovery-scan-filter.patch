From 22864049cede1ebeafa336c9ab21ef106a15cd77 Mon Sep 17 00:00:00 2001
From: Subramanian Srinivasan <subrsrin@codeaurora.org>
Date: Tue, 26 Mar 2019 23:50:18 -0700
Subject: [PATCH 31/37] Fix BLE transport discovery scan filter

Add BLE transport discovery scan filter
only when transport discovery organization
id is valid (greater than or equal to 0).

CRs-Fixed: 2424135
Change-Id: I40e6013c9c6be28c82b7265edae70e7d6d577749
---
 .../java/android/bluetooth/le/ScanFilter.java | 39 +++++++++++--------
 1 file changed, 22 insertions(+), 17 deletions(-)

diff --git a/core/java/android/bluetooth/le/ScanFilter.java b/core/java/android/bluetooth/le/ScanFilter.java
index 84523cbd1e9..108141ceb80 100644
--- a/core/java/android/bluetooth/le/ScanFilter.java
+++ b/core/java/android/bluetooth/le/ScanFilter.java
@@ -174,12 +174,15 @@ public final class ScanFilter implements Parcelable {
             }
         }
         dest.writeInt(mOrgId);
-        dest.writeInt(mTDSFlags);
-        dest.writeInt(mTDSFlagsMask);
-        dest.writeInt(mWifiNANHash == null ? 0 : 1);
-        if (mWifiNANHash != null) {
-            dest.writeInt(mWifiNANHash.length);
-            dest.writeByteArray(mWifiNANHash);
+        dest.writeInt(mOrgId < 0 ? 0 : 1);
+        if(mOrgId >= 0) {
+            dest.writeInt(mTDSFlags);
+            dest.writeInt(mTDSFlagsMask);
+            dest.writeInt(mWifiNANHash == null ? 0 : 1);
+            if (mWifiNANHash != null) {
+                dest.writeInt(mWifiNANHash.length);
+                dest.writeByteArray(mWifiNANHash);
+            }
         }
     }
 
@@ -259,17 +262,19 @@ public final class ScanFilter implements Parcelable {
             }
 
             int orgId = in.readInt();
-            int TDSFlags = in.readInt();
-            int TDSFlagsMask = in.readInt();
-            if (in.readInt() == 1) {
-                int wifiNANHashLength = in.readInt();
-                byte[] wifiNanHash = new byte[wifiNANHashLength];
-                in.readByteArray(wifiNanHash);
-                builder.setTransportDiscoveryData(orgId, TDSFlags, TDSFlagsMask,
-                        wifiNanHash);
-            }
-            else {
-                builder.setTransportDiscoveryData(orgId, TDSFlags, TDSFlagsMask, null);
+            if(in.readInt() == 1) {
+                int tdsFlags = in.readInt();
+                int tdsFlagsMask = in.readInt();
+                if (in.readInt() == 1) {
+                    int wifiNANHashLength = in.readInt();
+                    byte[] wifiNanHash = new byte[wifiNANHashLength];
+                    in.readByteArray(wifiNanHash);
+                    builder.setTransportDiscoveryData(orgId, tdsFlags, tdsFlagsMask,
+                            wifiNanHash);
+                }
+                else {
+                    builder.setTransportDiscoveryData(orgId, tdsFlags, tdsFlagsMask, null);
+                }
             }
 
             return builder.build();
-- 
2.28.0


From db1301f5274fb965cab1754e89f209ba1223dfb0 Mon Sep 17 00:00:00 2001
From: Danny Baumann <dannybaumann@web.de>
Date: Thu, 19 Jul 2018 09:59:55 +0200
Subject: [PATCH 1/5] dsi-staging: Add support for display modes.

Change-Id: I0e1f2bfa2348e5c94d67147c9fec4b042b0cabf4
---
 drivers/gpu/drm/msm/dsi-staging/dsi_defs.h    |  3 +
 drivers/gpu/drm/msm/dsi-staging/dsi_display.c | 70 +++++++++++++++++++
 drivers/gpu/drm/msm/dsi-staging/dsi_panel.c   | 37 +++++++++-
 drivers/gpu/drm/msm/dsi-staging/dsi_panel.h   | 11 +++
 4 files changed, 120 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/msm/dsi-staging/dsi_defs.h b/drivers/gpu/drm/msm/dsi-staging/dsi_defs.h
index 5a408ad35a2c..a5df7edf00fb 100644
--- a/drivers/gpu/drm/msm/dsi-staging/dsi_defs.h
+++ b/drivers/gpu/drm/msm/dsi-staging/dsi_defs.h
@@ -316,6 +316,9 @@ enum dsi_cmd_set_type {
 	DSI_CMD_SET_DISP_LCD_HBM_L2_ON,
 	DSI_CMD_SET_DISP_LCD_HBM_OFF,
 	DSI_CMD_SET_READ_LOCKDOWN_INFO,
+	DSI_CMD_SET_DISP_CRC_DCIP3,
+	DSI_CMD_SET_DISP_CRC_OFF,
+	DSI_CMD_SET_DISP_CRC_SRGB,
 	DSI_CMD_SET_MAX
 };
 
diff --git a/drivers/gpu/drm/msm/dsi-staging/dsi_display.c b/drivers/gpu/drm/msm/dsi-staging/dsi_display.c
index 291b5885906f..0b47d4bf0f02 100644
--- a/drivers/gpu/drm/msm/dsi-staging/dsi_display.c
+++ b/drivers/gpu/drm/msm/dsi-staging/dsi_display.c
@@ -5211,6 +5211,70 @@ static ssize_t sysfs_hbm_write(struct device *dev,
 	return ret == 0 ? count : ret;
 }
 
+static ssize_t sysfs_display_mode_read(struct device *dev,
+		struct device_attribute *attr, char *buf)
+{
+	struct dsi_display *display = dev_get_drvdata(dev);
+	if (!display->panel)
+		return 0;
+
+	return scnprintf(buf, PAGE_SIZE, "%s\n",
+		display->panel->display_mode == DISPLAY_MODE_SRGB ? "srgb" :
+		display->panel->display_mode == DISPLAY_MODE_DCI_P3 ? "dci-p3" :
+		"default");
+}
+
+static ssize_t sysfs_display_mode_write(struct device *dev,
+	    struct device_attribute *attr, const char *buf, size_t count)
+{
+	struct dsi_display *display = dev_get_drvdata(dev);
+	enum dsi_panel_display_mode mode;
+	int ret = 0;
+
+	if (!display->panel)
+		return -EINVAL;
+
+	if (!strcmp(buf, "srgb"))
+		mode = DISPLAY_MODE_SRGB;
+	else if (!strcmp(buf, "dci-p3"))
+		mode = DISPLAY_MODE_DCI_P3;
+	else if (!strcmp(buf, "default"))
+		mode = DISPLAY_MODE_DEFAULT;
+	else
+		return -EINVAL;
+
+	mutex_lock(&display->display_lock);
+
+	display->panel->display_mode = mode;
+	if (!dsi_panel_initialized(display->panel)) {
+                printk("not initialized\n");
+		goto error;
+	}
+
+	ret = dsi_display_clk_ctrl(display->dsi_clk_handle,
+			DSI_CORE_CLK, DSI_CLK_ON);
+	if (ret) {
+		pr_err("[%s] failed to enable DSI core clocks, rc=%d\n",
+		       display->name, ret);
+		goto error;
+	}
+
+	ret = dsi_panel_apply_display_mode(display->panel);
+	if (ret)
+		pr_err("unable to set display mode\n");
+
+	ret = dsi_display_clk_ctrl(display->dsi_clk_handle,
+			DSI_CORE_CLK, DSI_CLK_OFF);
+	if (ret) {
+		pr_err("[%s] failed to disable DSI core clocks, rc=%d\n",
+		       display->name, ret);
+		goto error;
+	}
+error:
+	mutex_unlock(&display->display_lock);
+	return ret == 0 ? count : ret;
+}
+
 static DEVICE_ATTR(doze_status, 0644,
 			sysfs_doze_status_read,
 			sysfs_doze_status_write);
@@ -5225,11 +5289,16 @@ static DEVICE_ATTR(fod_ui, 0444,
 
 static DEVICE_ATTR(hbm, 0644, sysfs_hbm_read, sysfs_hbm_write);
 
+static DEVICE_ATTR(display_mode, 0644,
+			sysfs_display_mode_read,
+			sysfs_display_mode_write);
+
 static struct attribute *display_fs_attrs[] = {
 	&dev_attr_doze_status.attr,
 	&dev_attr_doze_mode.attr,
 	&dev_attr_fod_ui.attr,
 	&dev_attr_hbm.attr,
+	&dev_attr_display_mode.attr,
 	NULL,
 };
 static struct attribute_group display_fs_attrs_group = {
@@ -7800,6 +7869,7 @@ int dsi_display_enable(struct dsi_display *display)
 		}
 
 		display->panel->panel_initialized = true;
+		dsi_panel_init_display_modes(display->panel);
 		pr_debug("cont splash enabled, display enable not required\n");
 		return 0;
 	}
diff --git a/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c b/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c
index 8b59471d9e51..9dab52409dd0 100644
--- a/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c
+++ b/drivers/gpu/drm/msm/dsi-staging/dsi_panel.c
@@ -1926,6 +1926,9 @@ const char *cmd_set_prop_map[DSI_CMD_SET_MAX] = {
 	"qcom,mdss-dsi-dispparam-lcd-hbm-l2-on-command",
 	"qcom,mdss-dsi-dispparam-lcd-hbm-off-command",
 	"qcom,mdss-dsi-read-lockdown-info-command",
+	"qcom,mdss-dsi-dispparam-crc-dcip3-on-command",
+	"qcom,mdss-dsi-dispparam-crc-off-command",
+	"qcom,mdss-dsi-dispparam-crc-srgb-on-command",
 };
 
 const char *cmd_set_state_map[DSI_CMD_SET_MAX] = {
@@ -1960,6 +1963,9 @@ const char *cmd_set_state_map[DSI_CMD_SET_MAX] = {
 	"qcom,mdss-dsi-dispparam-lcd-hbm-l2-on-command-state",
 	"qcom,mdss-dsi-dispparam-lcd-hbm-off-command-state",
 	"qcom,mdss-dsi-read-lockdown-info-command-state",
+	"qcom,mdss-dsi-dispparam-crc-dcip3-on-command-state",
+	"qcom,mdss-dsi-dispparam-crc-off-command-state",
+	"qcom,mdss-dsi-dispparam-crc-srgb-on-command-state",
 };
 
 static int dsi_panel_get_cmd_pkt_count(const char *data, u32 length, u32 *cnt)
@@ -4627,9 +4633,20 @@ int dsi_panel_enable(struct dsi_panel *panel)
 		panel->panel_initialized = true;
 	mutex_unlock(&panel->panel_lock);
 
-  if (panel->hbm_mode)
+	dsi_panel_init_display_modes(panel);
+
+	return rc;
+}
+
+int dsi_panel_init_display_modes(struct dsi_panel *panel)
+{
+	int rc;
+	if (panel->hbm_mode)
 		dsi_panel_apply_hbm_mode(panel);
 
+	if (panel->display_mode != DISPLAY_MODE_DEFAULT)
+		dsi_panel_apply_display_mode(panel);
+
 	return rc;
 }
 
@@ -4805,6 +4822,24 @@ int dsi_panel_apply_hbm_mode(struct dsi_panel *panel)
 	return rc;
 }
 
+int dsi_panel_apply_display_mode(struct dsi_panel *panel)
+{
+	enum dsi_cmd_set_type type;
+	int rc;
+
+	switch (panel->display_mode) {
+		case DISPLAY_MODE_SRGB: type = DSI_CMD_SET_DISP_CRC_SRGB; break;
+		case DISPLAY_MODE_DCI_P3: type = DSI_CMD_SET_DISP_CRC_DCIP3; break;
+		default: type = DSI_CMD_SET_DISP_CRC_OFF; break;
+	}
+
+	mutex_lock(&panel->panel_lock);
+	rc = dsi_panel_tx_cmd_set(panel, type);
+	mutex_unlock(&panel->panel_lock);
+
+	return rc;
+}
+
 int dsi_display_read_panel(struct dsi_panel *panel, struct dsi_read_config *read_config);
 static int dsi_display_write_panel(struct dsi_panel *panel,
 				struct dsi_panel_cmd_set *cmd_sets)
diff --git a/drivers/gpu/drm/msm/dsi-staging/dsi_panel.h b/drivers/gpu/drm/msm/dsi-staging/dsi_panel.h
index 7a11c6ff5815..75e58eb3d2e6 100644
--- a/drivers/gpu/drm/msm/dsi-staging/dsi_panel.h
+++ b/drivers/gpu/drm/msm/dsi-staging/dsi_panel.h
@@ -82,6 +82,12 @@ enum dsi_panel_physical_type {
 	DSI_DISPLAY_PANEL_TYPE_MAX,
 };
 
+enum dsi_panel_display_mode {
+	DISPLAY_MODE_DEFAULT,
+	DISPLAY_MODE_SRGB,
+	DISPLAY_MODE_DCI_P3,
+};
+
 struct dsi_dfps_capabilities {
 	enum dsi_dfps_type type;
 	u32 min_refresh_rate;
@@ -229,6 +235,7 @@ struct dsi_panel {
 	struct dsi_parser_utils utils;
 
 	int hbm_mode;
+	enum dsi_panel_display_mode display_mode;
 	bool is_tddi_flag;
 	bool panel_dead_flag;
 
@@ -402,6 +409,10 @@ u32 dsi_panel_get_fod_dim_alpha(struct dsi_panel *panel);
 
 int dsi_panel_apply_hbm_mode(struct dsi_panel *panel);
 
+int dsi_panel_apply_display_mode(struct dsi_panel *panel);
+
+int dsi_panel_init_display_modes(struct dsi_panel *panel);
+
 int dsi_panel_idle(struct dsi_panel *panel);
 int dsi_panel_wakeup(struct dsi_panel *panel);
 
-- 
2.28.0


From 610311ebd67be7e7943c9907462dc9ad8a261ee8 Mon Sep 17 00:00:00 2001
From: Venkata Jagadeesh Garaga <vgaraga@codeaurora.org>
Date: Fri, 5 Apr 2019 17:38:18 +0530
Subject: [PATCH 12/12] BT: Don't display previously connected devices in
 BLE_ON

When user turn off BT from settings menu with BLE APPs
running, cached devices will not be cleared until bt off.

Previously connected devices list will be displayed
in BT settings screen

Hence disable previously connected list in BLE_ON state.

CRs-Fixed: 2693837
Change-Id: I11df81819d0be0d3f7d7598b53057afcb5245901
---
 ...lyConnectedDevicePreferenceController.java | 46 ++++++++++++++++++-
 1 file changed, 45 insertions(+), 1 deletion(-)

diff --git a/src/com/android/settings/connecteddevice/PreviouslyConnectedDevicePreferenceController.java b/src/com/android/settings/connecteddevice/PreviouslyConnectedDevicePreferenceController.java
index 438a381..c9d9f8e 100644
--- a/src/com/android/settings/connecteddevice/PreviouslyConnectedDevicePreferenceController.java
+++ b/src/com/android/settings/connecteddevice/PreviouslyConnectedDevicePreferenceController.java
@@ -31,6 +31,9 @@ import androidx.preference.PreferenceScreen;
 
 import com.android.settings.R;
 import com.android.settings.bluetooth.BluetoothDevicePreference;
+import com.android.settingslib.bluetooth.BluetoothCallback;
+import com.android.settingslib.bluetooth.CachedBluetoothDevice;
+import com.android.settings.bluetooth.Utils;
 import com.android.settings.bluetooth.BluetoothDeviceUpdater;
 import com.android.settings.bluetooth.SavedBluetoothDeviceUpdater;
 import com.android.settings.connecteddevice.dock.DockUpdater;
@@ -45,7 +48,7 @@ import java.util.ArrayList;
 import java.util.List;
 
 public class PreviouslyConnectedDevicePreferenceController extends BasePreferenceController
-        implements LifecycleObserver, OnStart, OnStop, DevicePreferenceCallback {
+        implements LifecycleObserver, OnStart, OnStop, DevicePreferenceCallback, BluetoothCallback {
 
     private static final String TAG = "PreviouslyDevicePreController";
     private static final boolean DEBUG = Log.isLoggable(TAG, Log.DEBUG);
@@ -200,6 +203,46 @@ public class PreviouslyConnectedDevicePreferenceController extends BasePreferenc
         updatePreferenceVisibility();
     }
 
+    @Override
+    public void onBluetoothStateChanged(int bluetoothState) {
+        updatePreferenceVisibility();
+    }
+
+    @Override
+    public void onScanningStateChanged(boolean started) {
+        // do nothing
+    }
+
+    @Override
+    public void onDeviceAdded(CachedBluetoothDevice cachedDevice) {
+       // do nothing
+    }
+
+    @Override
+    public void onDeviceDeleted(CachedBluetoothDevice cachedDevice) {
+        // do nothing
+    }
+
+    @Override
+    public void onDeviceBondStateChanged(CachedBluetoothDevice cachedDevice, int bondState) {
+        // do nothing
+    }
+
+    @Override
+    public void onConnectionStateChanged(CachedBluetoothDevice cachedDevice, int state) {
+        // do nothing
+    }
+
+    @Override
+    public void onActiveDeviceChanged(CachedBluetoothDevice activeDevice, int bluetoothProfile) {
+        // do nothing
+    }
+
+    @Override
+    public void onAudioModeChanged() {
+       // do nothing
+    }
+
     @VisibleForTesting
     void setBluetoothDeviceUpdater(BluetoothDeviceUpdater bluetoothDeviceUpdater) {
         mBluetoothDeviceUpdater = bluetoothDeviceUpdater;
@@ -224,4 +267,5 @@ public class PreviouslyConnectedDevicePreferenceController extends BasePreferenc
                     mContext.getString(R.string.connected_device_see_all_summary));
         }
     }
+
 }
-- 
2.28.0

